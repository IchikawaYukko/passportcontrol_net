AWSTemplateFormatVersion: 2010-09-09
Resources:
# Networks
  gw1:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref PCvpc
      InternetGatewayId: !Ref PCigw
  PCigw:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  PCvpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 172.1.0.0/16
      InstanceTenancy: default
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
  PCvpcipv6cidrblock:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      AmazonProvidedIpv6CidrBlock: true
      VpcId: !Ref PCvpc
  PCdchpAssoc:
    Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
    Properties:
      VpcId: !Ref PCvpc
      DhcpOptionsId: !Ref PCdopt
  PCsubnet:
    Type: 'AWS::EC2::Subnet'
    DependsOn:
      - PCvpcipv6cidrblock
    Properties:
      CidrBlock: 172.1.1.0/24
      Ipv6CidrBlock: !Sub ['${Param1}00::/64', {Param1: !Select ['0', !Split ['00::/',
              !Select [0, !GetAtt 'PCvpc.Ipv6CidrBlocks']]]}]
      AssignIpv6AddressOnCreation: true
      AvailabilityZone: ap-northeast-1d
      VpcId: !Ref PCvpc
  PCdopt:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      DomainName: ap-northeast-1.compute.internal
      DomainNameServers:
        - AmazonProvidedDNS
  PCeip:
    Type: 'AWS::EC2::EIP' # Add IPv6 EIP
    Properties:
      InstanceId: !Ref PCinstance
  PCsubnetRTBassoc:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PCrtb
      SubnetId: !Ref PCsubnet
# SecurityGroups
  PCsgdefault:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: default VPC security group
      VpcId: !Ref PCvpc
  sgCentOS7x8664withUpdatesHVM200201AutogenByAWSMP:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        This security group was generated by AWS Marketplace and is based on
        recommended settings for CentOS 7 (x86_64) - with Updates HVM version
        2002_01 provided by Centos.org
      VpcId: !Ref PCvpc
      SecurityGroupIngress:
      - IpProtocol: tcp
#        FromPort: 7
#        ToPort: 7
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 7
        ToPort: 7
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIpv6: ::/0
# RouteTables
  PCrtb:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref PCvpc
      Tags:
        - Key: Name
          Value: passportctl
  route1:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PCrtb
      GatewayId: !Ref PCigw
    DependsOn: gw1
  route2:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationIpv6CidrBlock: ::/0
      RouteTableId: !Ref PCrtb
      GatewayId: !Ref PCigw
# Instances
  PCinstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      EbsOptimized: 'true'
      #ImageId: ami-06a46da680048c8ae # CentOS Linux 7 x86_64 HVM EBS ENA 2002_01
      ImageId: ami-0cc75a8978fbbc969 # Amazon Linux 2 AMI (HVM), SSD Volume Type
      InstanceType: t3a.nano
      KeyName: passportctl
      BlockDeviceMappings:
        - DeviceName: /dev/xvda1
          Ebs:
            VolumeType: gp2
            VolumeSize: '30'
            DeleteOnTermination: 'false'
            Encrypted: 'false'
      Monitoring: 'false'
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          DeviceIndex: 0
          SubnetId: !Ref PCsubnet
          PrivateIpAddresses:
            - PrivateIpAddress: 172.1.1.254
              Primary: 'true'
          GroupSet:
            - !Ref sgCentOS7x8664withUpdatesHVM200201AutogenByAWSMP
          AssociatePublicIpAddress: 'true'
          Ipv6AddressCount: 1
      Tags:
        - Key: Name
          Value: passportctl
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # EC2 startup script
          # Get systems ready to accept Ansible configuration
          yum -y update

          /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=8192
          /sbin/mkswap /var/swap.1
          /sbin/swapon /var/swap.1
          echo '/var/swap.1                                   swap        swap   defaults          0   0' >> /etc/fstab

          sed --in-place 's/^#Port.*/Port 7/' /etc/ssh/sshd_config
          sed --in-place 's/^#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
          systemctl restart sshd
          iptables -F

#          useradd ansible
#          usermod -G wheel ansible
#          echo "ansible:passwd"|chpasswd
#          
#          mkdir -p ~ansible/.ssh
#          cp /home/centos/.ssh/authorized_keys ~ansible/.ssh/
#          chown ansible:ansible ~ansible/.ssh/authorized_keys
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value:
      Ref: PCinstance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - PCinstance
      - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - PCinstance
      - PublicDnsName
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value:
      Fn::GetAtt:
      - PCinstance
      - PublicIp
